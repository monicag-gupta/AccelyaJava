Drop table persons;


CREATE TABLE persons(
    person_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    PRIMARY KEY(person_id)
);


Insert into persons(person_id,first_name, last_name) values(101,'John', 'Doe');
Insert into persons(person_id,first_name, last_name) values(102,'Jane', 'Smith');
select * from persons;


DESC persons;
-- If no data is entered in the table
ALTER TABLE persons ADD birthdate DATE NOT NULL;

-- If data is already entered in the table
ALTER TABLE persons ADD birthdate DATE NOT NULL DEFAULT SYSDATE;

DESC persons; 
ALTER TABLE persons ADD ( phone VARCHAR(20), email VARCHAR(100) );


ALTER TABLE persons MODIFY birthdate DATE NULL;
ALTER TABLE persons MODIFY( phone VARCHAR2(20) NOT NULL, email VARCHAR2(255) NOT NULL );
DESC persons;


ALTER TABLE persons DROP COLUMN birthdate;
ALTER TABLE persons DROP ( email, phone );
DESC persons;


ALTER TABLE persons RENAME COLUMN first_name TO forename;
DESC persons;


ALTER TABLE persons RENAME TO peoples;
RENAME persons TO ppls;



ALTER TABLE peoples READ ONLY;

-- try inserting data to the table, it shows locked status.
-- perform table maintenance and then
-- return table back to read/write mode

ALTER TABLE peoples READ WRITE;



HR : Simplified :


CREATE TABLE COUNTRIES (
    COUNTRY_ID CHAR(2) PRIMARY KEY,
    COUNTRY_NAME VARCHAR2(40)
);

INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME) VALUES ('US', 'United States');
INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME) VALUES ('IN', 'India');
INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME) VALUES ('UK', 'United Kingdom');
INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME) VALUES ('AU', 'Australia');

CREATE TABLE LOCATIONS (
    LOCATION_ID NUMBER PRIMARY KEY,
    STREET_ADDRESS VARCHAR2(50),
    CITY VARCHAR2(30),
    STATE_PROVINCE VARCHAR2(25),
    COUNTRY_ID CHAR(2),
    CONSTRAINT fk_country FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES(COUNTRY_ID)
);

INSERT INTO LOCATIONS (LOCATION_ID, STREET_ADDRESS, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES (1000, '123 Main St', 'New York', 'NY', 'US');

INSERT INTO LOCATIONS (LOCATION_ID, STREET_ADDRESS, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES (1001, '456 MG Road', 'Bangalore', 'KA', 'IN');

INSERT INTO LOCATIONS (LOCATION_ID, STREET_ADDRESS, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES (1002, '789 King St', 'London', 'London', 'UK');

INSERT INTO LOCATIONS (LOCATION_ID, STREET_ADDRESS, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES (1003, '321 Queen St', 'Sydney', 'NSW', 'AU');



CREATE TABLE DEPARTMENTS (
    DEPARTMENT_ID NUMBER PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(30),
    LOCATION_ID NUMBER,
    CONSTRAINT fk_location FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID)
);


INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID ) VALUES (10, 'Administration', 1000);
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID ) VALUES (20, 'Finance', 1001);
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID ) VALUES (30, 'IT', 1002);
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID ) VALUES (40, 'Sales', 1003);



CREATE TABLE JOBS (
    JOB_ID VARCHAR2(10) PRIMARY KEY,
    JOB_TITLE VARCHAR2(35),
    MIN_SALARY NUMBER,
    MAX_SALARY NUMBER
);

INSERT INTO JOBS (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY) 
VALUES ('AD_PRES', 'President', 20000, 40000);

INSERT INTO JOBS (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY) 
VALUES ('AD_VP', 'Vice President', 15000, 30000);

INSERT INTO JOBS (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY) 
VALUES ('IT_PROG', 'Programmer', 4000, 10000);

INSERT INTO JOBS (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY) 
VALUES ('FI_ACCOUNT', 'Accountant', 5000, 12000);

INSERT INTO JOBS (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY) 
VALUES ('SA_REP', 'Sales Representative', 3000, 9000);





CREATE TABLE EMPLOYEES (
    EMPLOYEE_ID NUMBER PRIMARY KEY,
    FIRST_NAME VARCHAR2(20),
    LAST_NAME VARCHAR2(25) NOT NULL,
    EMAIL VARCHAR2(50),
    PHONE_NUMBER VARCHAR2(20),
    HIRE_DATE DATE,
    JOB_ID VARCHAR2(10),
    SALARY NUMBER(8,2),
    COMMISSION_PCT NUMBER(2,2),
    MANAGER_ID NUMBER,
    DEPARTMENT_ID NUMBER,
    CONSTRAINT fk_job FOREIGN KEY (JOB_ID) REFERENCES JOBS(JOB_ID),
    CONSTRAINT fk_department FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID)
);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(100, 'Steven', 'King', 'SKING@HR.COM', '515.123.4567', TO_DATE('2003-06-17','YYYY-MM-DD'), 'AD_PRES', 24000, NULL, NULL, 10);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(101, 'Neena', 'Kochhar', 'NKOCHHAR@HR.COM', '515.123.4568', TO_DATE('2005-09-21','YYYY-MM-DD'), 'AD_VP', 17000, NULL, 100, 10);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(102, 'Lex', 'De Haan', 'LDEHAAN@HR.COM', '515.123.4569', TO_DATE('2001-01-13','YYYY-MM-DD'), 'AD_VP', 17000, NULL, 100, 10);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(103, 'Alexander', 'Hunold', 'AHUNOLD@HR.COM', '590.423.4567', TO_DATE('2006-01-03','YYYY-MM-DD'), 'IT_PROG', 9000, NULL, 102, 30);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(104, 'Bruce', 'Ernst', 'BERNST@HR.COM', '590.423.4568', TO_DATE('2007-05-21','YYYY-MM-DD'), 'IT_PROG', 6000, NULL, 103, 30);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(105, 'David', 'Austin', 'DAUSTIN@HR.COM', '590.423.4569', TO_DATE('2005-06-25','YYYY-MM-DD'), 'FI_ACCOUNT', 4800, NULL, 102, 20);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(106, 'Valli', 'Pataballa', 'VPATABAL@HR.COM', '590.423.4560', TO_DATE('2006-02-05','YYYY-MM-DD'), 'SA_REP', 4800, 0.15, 103, 40);


INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(107, 'Diana', 'Lorentz', 'DLORENTZ@HR.COM', '590.423.4570', TO_DATE('2007-03-15','YYYY-MM-DD'), 'IT_PROG', 7000, NULL, 103, 30);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(108, 'Nancy', 'Green', 'NGREEN@HR.COM', '515.124.4567', TO_DATE('2008-07-01','YYYY-MM-DD'), 'FI_ACCOUNT', 5000, NULL, 105, 20);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(109, 'John', 'Chen', 'JCHEN@HR.COM', '515.125.4568', TO_DATE('2009-10-12','YYYY-MM-DD'), 'SA_REP', 4500, 0.10, 106, 40);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(110, 'Peter', 'Brown', 'PBROWN@HR.COM', '590.424.4567', TO_DATE('2010-02-18','YYYY-MM-DD'), 'IT_PROG', 8000, NULL, 103, 30);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(111, 'Laura', 'Smith', 'LSMITH@HR.COM', '590.425.4568', TO_DATE('2011-11-25','YYYY-MM-DD'), 'SA_REP', 4700, 0.12, 106, 40);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(112, 'James', 'Taylor', 'JTAYLOR@HR.COM', '515.126.4567', TO_DATE('2012-06-30','YYYY-MM-DD'), 'FI_ACCOUNT', 5200, NULL, 105, 20);

INSERT INTO EMPLOYEES 
(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
VALUES 
(113, 'Samantha', 'Lee', 'SLEE@HR.COM', '590.426.4569', TO_DATE('2013-09-05','YYYY-MM-DD'), 'IT_PROG', 7500, NULL, 103, 30);










-- HR Simplified Ends.





CREATE TABLE 	emp3
  AS  SELECT  employee_id, last_name, 
            salary*12 ANNSAL, manager_id,
            hire_date, Department_id   FROM    employees;

Desc emp3;
Select * from emp3;




ALTER TABLE emp3
MODIFY employee_id PRIMARY KEY;


ALTER TABLE emp3
ADD CONSTRAINT emp_mgr_fk 
  FOREIGN KEY(manager_id) 
  REFERENCES emp3(employee_id);


ALTER TABLE emp3 ADD CONSTRAINT emp_dt_fk22 
FOREIGN KEY (Department_id) 
REFERENCES departments(department_id) ON DELETE CASCADE; 

-- if we delete a record from departments table, corresponding records relative to the 
-- department_id in emp3 will get deleted

select * from departments;
select * from emp3;

select * from emp3 where department_id=20;

201	Hartstein	156000	100	2004-02-17T00:00	20
105	Austin	57600	102	2005-06-25T00:00	20


ALTER TABLE emp3 drop CONSTRAINT emp_dt_fk22;

ALTER TABLE emp3 ADD CONSTRAINT emp_dt_fk22 
FOREIGN KEY (Department_id) 
REFERENCES departments(department_id) ON DELETE CASCADE;



ALTER TABLE emp3 DROP CONSTRAINT emp_dt_fk22;
ALTER TABLE employees drop CONSTRAINT EMP_DEPT_FK;


ALTER TABLE emp3 ADD CONSTRAINT emp_dt_fk22 
FOREIGN KEY (Department_id) 
REFERENCES departments(department_id) ON DELETE cascade; 


select * from departments;
select * from emp3;

select * from emp3 where department_id=20;

delete from departments where department_id=20;

select * from departments;

select * from emp3 where department_id=20;
-- no emp in department 20 exists

INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID ) VALUES (20, 'Finance', 1001);

drop table emp3;

CREATE TABLE 	emp3
  AS  SELECT  employee_id, last_name, 
            salary*12 ANNSAL, manager_id,
            hire_date, Department_id   FROM    employees;




ALTER TABLE emp3 DROP CONSTRAINT emp_dt_fk22;
-- ALTER TABLE employees drop CONSTRAINT EMP_DEPT_FK;


ALTER TABLE emp3 ADD CONSTRAINT emp_dt_fk22 
FOREIGN KEY (Department_id) 
REFERENCES departments(department_id) ON DELETE SET NULL; 


select * from departments;
select * from emp3;

select * from emp3 where department_id=20;

delete from departments where department_id=20;

select * from departments;

select * from emp3 where department_id is NULL;

201	Hartstein	156000	100	2004-02-17T00:00	null
105	Austin	57600	102	2005-06-25T00:00	null









ALTER TABLE emp3
DROP CONSTRAINT emp_mgr_fk22;

-- try to insert in emp3 values where department_id = 500

INSERT INTO emp3 
(employee_id, last_name, 
            ANNSAL, manager_id,
            hire_date, Department_id) 
VALUES 
(115, 'Jin', 45678 , 113, TO_DATE('2013-09-05','YYYY-MM-DD'), 500);


ALTER TABLE departments
DROP PRIMARY KEY CASCADE;

-- try to insert in emp3 values where department_id = 500

INSERT INTO emp3 
(employee_id, last_name, 
            ANNSAL, manager_id,
            hire_date, Department_id) 
VALUES 
(115, 'Jin', 45678 , 113, TO_DATE('2013-09-05','YYYY-MM-DD'), 500);



ALTER TABLE departments
Add PRIMARY KEY (department_id);

delete from emp3 where department_id=500;

ALTER TABLE emp3 ADD CONSTRAINT emp_dt_fk22 
FOREIGN KEY (Department_id) 
REFERENCES departments(department_id) ON DELETE SET NULL; 


ALTER TABLE	emp3
DISABLE CONSTRAINT emp_dt_fk22;
-- try to insert data violating the constraint
-- It will get inserted
-- delete that row which violated the constraint

INSERT INTO emp3 
(employee_id, last_name, 
            ANNSAL, manager_id,
            hire_date, Department_id) 
VALUES 
(115, 'Jin', 45678 , 113, TO_DATE('2013-09-05','YYYY-MM-DD'), 500);


delete from emp3 where department_id=500;


ALTER TABLE		emp3
ENABLE CONSTRAINT	emp_dt_fk22;



Arithmetic: +, -, *, /

SELECT last_name, salary, salary + 300
FROM   employees;


SELECT last_name, job_id, salary, commission_pct
FROM   employees;


SELECT last_name AS name, commission_pct comm
FROM   employees;


SELECT last_name "Name" , salary*12 "Annual Salary"
FROM   employees;



SELECT	last_name||job_id AS "Employees"
FROM 	employees;

SELECT last_name ||' is a '||job_id 
       AS "Employee Details"
FROM   employees;




























































