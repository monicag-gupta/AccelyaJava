package Day3;
interface IndraVerma{
	void ChotaBheem();   //Single Abstract Method : SAM
}

public class FIEg {

	public static void main(String[] args) {
		IndraVerma k=()->System.out.println("Kalaripayettu");
		k.ChotaBheem();
		
	}

}







package Day3;
interface Animal{
	void train();
}

public class FIEg {
	static void AnimalTrainer(Animal a) {
		a.train();
	}

	public static void main(String[] args) {
		Animal dog=new Animal() {
			public void train() {
				System.out.println("Dog trained");
			}
		};
		AnimalTrainer(dog);
		Animal cat = () -> System.out.println("Cat trained");
		AnimalTrainer(cat);
		AnimalTrainer(()->System.out.println("Horse Trained"));
		
		
	}

}








package Day3;

@FunctionalInterface
interface I1{
	void fn1();
}

@FunctionalInterface
interface I2{
	void fn2(int x);
}

@FunctionalInterface
interface I3{
	void fn3(int x, String s);
}

@FunctionalInterface
interface I4{
	String fn4();
}

@FunctionalInterface
interface I5{
	int fn5(String s);
}

public class FIEg {
	public static void main(String[] args) {
		I1 i11= ()->System.out.println("I1");
		I1 i12= ()->{
			System.out.println("I12");
			System.out.println("I12 again");
			};
			
		I2 i21 = x -> System.out.println(x);
		I2 i22 = (x) -> System.out.println(x);
		I2 i23 = (int x) -> System.out.println(x);
		
		I3 i31 = (x,y) -> System.out.println(x + " " + y);
		I3 i32 = (int x, String y) -> System.out.println(x + " " + y);
		
		I4 i41 = () -> "Hello World";
		I4 i42 = () -> {return "Hello World";};
		I4 i43 = () -> {
			String s=new java.util.Scanner(System.in).nextLine();
			return s;
			};
		
		I5 i51 = x -> x.length();
			
		
		
		
	}

}









package Day3;

@FunctionalInterface
interface I1{
	void fn1();
}

@FunctionalInterface
interface I2{
	void fn2(int x);
}

@FunctionalInterface
interface I3{
	void fn3(int x, String s);
}

@FunctionalInterface
interface I4{
	String fn4();
}

@FunctionalInterface
interface I5{
	int fn5(String s);
}

public class FIEg {
	public static void main(String[] args) {
		I1 i11= ()->System.out.println("I1");
		I1 i12= ()->{
			System.out.println("I12");
			System.out.println("I12 again");
			};
			
		I2 i21 = x -> System.out.println(x);
		I2 i22 = (x) -> System.out.println(x);
		I2 i23 = (int x) -> System.out.println(x);
		
		I3 i31 = (x,y) -> System.out.println(x + " " + y);
		I3 i32 = (int x, String y) -> System.out.println(x + " " + y);
		
		I4 i41 = () -> "Hello World";
		I4 i42 = () -> {return "Hello World";};
		I4 i43 = () -> {
			String s=new java.util.Scanner(System.in).nextLine();
			return s;
			};
		
		I5 i51 = x -> x.length();
		
		
		i11.fn1();
		i12.fn1();
		
		i21.fn2(10);
		i22.fn2(10);
		i23.fn2(10);
		
		i31.fn3(10, "Hi");
		i32.fn3(10, "Hi");
		
		System.out.println(i41.fn4());
		System.out.println(i42.fn4());
		System.out.println(i43.fn4());
		
		System.out.println(i51.fn5("Hello"));
		
		
		
		
	}

}











package Day3;

@FunctionalInterface
interface I1{
	void fn1();
}

@FunctionalInterface
interface I2{
	void fn2(int x);
}

@FunctionalInterface
interface I3{
	void fn3(int x, String s);
}

@FunctionalInterface
interface I4{
	String fn4();
}

@FunctionalInterface
interface I5{
	int fn5(String s);
}

public class FIEg {
	public static void main(String[] args) {
		I1 i11= ()->System.out.println("I1");
		I1 i12= ()->{
			System.out.println("I12");
			System.out.println("I12 again");
			};
			
		I2 i21 = x -> System.out.println(x);
		I2 i22 = (x) -> System.out.println(x);
		I2 i23 = (int x) -> System.out.println(x);
		
		I3 i31 = (x,y) -> System.out.println(x + " " + y);
		I3 i32 = (int x, String y) -> System.out.println(x + " " + y);
		
		I4 i41 = () -> "Hello World";
		I4 i42 = () -> {return "Hello World";};
		I4 i43 = () -> {
			System.out.println("Enter a String:");
			String s=new java.util.Scanner(System.in).nextLine();
			return s;
			};
		
		I5 i51 = x -> x.length();
		
		
		i11.fn1();
		i12.fn1();
		
		i21.fn2(10);
		i22.fn2(10);
		i23.fn2(10);
		
		i31.fn3(10, "Hi");
		i32.fn3(10, "Hi");
		
		System.out.println(i41.fn4());
		System.out.println(i42.fn4());
		System.out.println(i43.fn4());
		
		System.out.println(i51.fn5("Hello"));
		
		
		
		
	}

}








package Day3;
interface I1{
	void fn();
}

interface I2{
	int fn(String s);
}



class Abc{
	public void a() {
		System.out.println("This is new A()->a");
	}
	public int b(String s) {
		System.out.println("This is new A()->b");
		return s.length();
	}
	
}

public class FIEg {
	public static void main(String[] args) {
		//Lambda
		I1 i1=()->new Abc().a();
		i1.fn();
		I1 i2 = new Abc() :: a;
		i2.fn();
		
		
		I2 i3 =(s) -> new Abc().b(s);
		System.out.println(i3.fn("Hello"));
		I2 i4 = new Abc() :: b;
		System.out.println(i4.fn("Hello"));
	}

}














package Day3;
interface I1{
	void fn();
}

interface I2{
	int fn(String s);
}

interface I3{
	void fn(String s);
}



class Abc{
	
	public Abc() {
		System.out.println("Abc() constructor");
	}
	public Abc(String s) {
		System.out.println("Abc("+s+") constructor");
	}
	public void a() {
		System.out.println("This is new A()->a");
	}
	public int b(String s) {
		System.out.println("This is new A()->b");
		return s.length();
	}
	
	public static int c(String s) {
		System.out.println("This is new A()->b");
		return s.length();
	}
	
}

public class FIEg {
	public static void main(String[] args) {
		//Lambda
		I1 i1=()->new Abc().a();
		i1.fn();
		I1 i2 = new Abc() :: a;
		i2.fn();
		
		
		I2 i3 =(s) -> new Abc().b(s);
		System.out.println(i3.fn("Hello"));
		I2 i4 = new Abc() :: b;
		System.out.println(i4.fn("Hello"));
		
		
		
		//:: -> link to a Constructor
		// any no of parameters but return value should be void in the FI -> SAM
		I1 i5=() -> new Abc();
		I1 i6 = Abc :: new;
		
		I3 i7=Abc :: new;
		
		
		//:: -> link to an object's method
		
		I1 i8=new Abc()::a;
		
		//:: -> link to a static method
		
		I2 i9 = Abc :: c;
		
		
		I2 i11 = (s) -> s.length();
		//:: -> link to arbitrary method
		I2 i10 = String :: length;
		
		
		I3 i12 = System.out :: println;
		
		
		
		
		
	}

}






